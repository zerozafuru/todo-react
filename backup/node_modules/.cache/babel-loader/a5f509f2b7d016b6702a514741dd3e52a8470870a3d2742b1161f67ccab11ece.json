{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskItem/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleCompleted, deleteTodo, renameTodo } from \"../../store/todosSlice\";\nimport { BoxStyled, DeleteButtonStyled, FormStyled, ListStyled, NameStyled, RenameStyled } from \"./TaskItem.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const [edit, setEdit] = useState(false);\n  const [title, setTitle] = useState(props.todo.title);\n  const dispatch = useDispatch();\n  const onTaskRename = e => {\n    e.preventDefault();\n    setEdit(false);\n    if (!title.trim()) {\n      setTitle(props.todo.title);\n      return;\n    }\n    dispatch(renameTodo({\n      id: props.todo.id,\n      text: title.trim()\n    }));\n  };\n  const editTitle = e => {\n    setTitle(e.target.value);\n  };\n  const editTodo = () => {\n    setTitle(props.todo.title);\n    setEdit(!edit);\n  };\n  return /*#__PURE__*/_jsxDEV(ListStyled, {\n    children: /*#__PURE__*/_jsxDEV(FormStyled, {\n      onSubmit: onTaskRename,\n      children: [/*#__PURE__*/_jsxDEV(BoxStyled, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => dispatch(toggleCompleted(props.todo.id)),\n            checked: props.todo.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), edit ? /*#__PURE__*/_jsxDEV(RenameStyled, {\n          value: title,\n          onChange: editTitle,\n          onBlur: editTodo,\n          type: \"text\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NameStyled, {\n          className: props.todo.completed ? 'done' : 'active',\n          onDoubleClick: editTodo,\n          children: props.todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButtonStyled, {\n        type: \"button\",\n        onClick: () => dispatch(deleteTodo(props.todo.id)),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"M+mmYlGDcY3QIOPBPL81bVS27U8=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["useState","useDispatch","toggleCompleted","deleteTodo","renameTodo","BoxStyled","DeleteButtonStyled","FormStyled","ListStyled","NameStyled","RenameStyled","TaskItem","props","edit","setEdit","title","setTitle","todo","dispatch","onTaskRename","e","preventDefault","trim","id","text","editTitle","target","value","editTodo","completed"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskItem/TaskItem.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleCompleted, deleteTodo, renameTodo } from \"../../store/todosSlice\";\n\nimport { BoxStyled, DeleteButtonStyled, FormStyled, ListStyled, NameStyled, RenameStyled } from \"./TaskItem.styles\";\n\nconst TaskItem = (props) => {\n  const [edit, setEdit] = useState(false);\n  const [title, setTitle] = useState(props.todo.title);\n\n  const dispatch = useDispatch()\n\n  const onTaskRename = (e) => {\n\n    e.preventDefault();\n    setEdit(false);\n    if (!title.trim()) {\n      setTitle(props.todo.title)\n      return\n    }\n    dispatch(renameTodo({ id: props.todo.id, text: title.trim() }))\n  }\n\n  const editTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const editTodo = () => {\n    setTitle(props.todo.title)\n    setEdit(!edit)\n  }\n\n  return (\n    <ListStyled>\n      <FormStyled\n        onSubmit={onTaskRename} >\n        <BoxStyled>\n          <label >\n            <input\n              type='checkbox'\n              onChange={() => dispatch(toggleCompleted(props.todo.id))}\n              checked={props.todo.completed}\n            />\n          </label>\n          {edit ? (\n            <RenameStyled\n              value={title}\n              onChange={editTitle}\n              onBlur={editTodo}\n              type=\"text\"\n              autoFocus>\n            </RenameStyled>\n          ) : (\n            <NameStyled \n              className={props.todo.completed ? 'done' : 'active'}\n              onDoubleClick={editTodo}>\n              {props.todo.title}\n            </NameStyled>\n          )}\n        </BoxStyled>\n        <DeleteButtonStyled\n          type=\"button\"\n          onClick={() => dispatch(deleteTodo(props.todo.id))}>\n          &#10006;\n        </DeleteButtonStyled>\n      </FormStyled>\n    </ListStyled>\n  )\n}\n\nexport default TaskItem;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,EAAEC,UAAU,EAAEC,UAAU,QAAQ,wBAAwB;AAEhF,SAASC,SAAS,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,mBAAmB;AAAC;AAEpH,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACY,KAAK,CAACK,IAAI,CAACF,KAAK,CAAC;EAEpD,MAAMG,QAAQ,GAAGjB,WAAW,EAAE;EAE9B,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IAE1BA,CAAC,CAACC,cAAc,EAAE;IAClBP,OAAO,CAAC,KAAK,CAAC;IACd,IAAI,CAACC,KAAK,CAACO,IAAI,EAAE,EAAE;MACjBN,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAACF,KAAK,CAAC;MAC1B;IACF;IACAG,QAAQ,CAACd,UAAU,CAAC;MAAEmB,EAAE,EAAEX,KAAK,CAACK,IAAI,CAACM,EAAE;MAAEC,IAAI,EAAET,KAAK,CAACO,IAAI;IAAG,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAMG,SAAS,GAAIL,CAAC,IAAK;IACvBJ,QAAQ,CAACI,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAM;IACrBZ,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAACF,KAAK,CAAC;IAC1BD,OAAO,CAAC,CAACD,IAAI,CAAC;EAChB,CAAC;EAED,oBACE,QAAC,UAAU;IAAA,uBACT,QAAC,UAAU;MACT,QAAQ,EAAEM,YAAa;MAAA,wBACvB,QAAC,SAAS;QAAA,wBACR;UAAA,uBACE;YACE,IAAI,EAAC,UAAU;YACf,QAAQ,EAAE,MAAMD,QAAQ,CAAChB,eAAe,CAACU,KAAK,CAACK,IAAI,CAACM,EAAE,CAAC,CAAE;YACzD,OAAO,EAAEX,KAAK,CAACK,IAAI,CAACY;UAAU;YAAA;YAAA;YAAA;UAAA;QAC9B;UAAA;UAAA;UAAA;QAAA,QACI,EACPhB,IAAI,gBACH,QAAC,YAAY;UACX,KAAK,EAAEE,KAAM;UACb,QAAQ,EAAEU,SAAU;UACpB,MAAM,EAAEG,QAAS;UACjB,IAAI,EAAC,MAAM;UACX,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACI,gBAEf,QAAC,UAAU;UACT,SAAS,EAAEhB,KAAK,CAACK,IAAI,CAACY,SAAS,GAAG,MAAM,GAAG,QAAS;UACpD,aAAa,EAAED,QAAS;UAAA,UACvBhB,KAAK,CAACK,IAAI,CAACF;QAAK;UAAA;UAAA;UAAA;QAAA,QAEpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACS,eACZ,QAAC,kBAAkB;QACjB,IAAI,EAAC,QAAQ;QACb,OAAO,EAAE,MAAMG,QAAQ,CAACf,UAAU,CAACS,KAAK,CAACK,IAAI,CAACM,EAAE,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhC;IAAA;MAAA;MAAA;MAAA;IAAA;EACV;IAAA;IAAA;IAAA;EAAA,QACF;AAEjB,CAAC;AAAA,GA9DKZ,QAAQ;EAAA,QAIKV,WAAW;AAAA;AAAA,KAJxBU,QAAQ;AAgEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}