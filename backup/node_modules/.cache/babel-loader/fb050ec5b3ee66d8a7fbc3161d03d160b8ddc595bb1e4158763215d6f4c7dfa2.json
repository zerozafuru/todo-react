{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskItem/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./TaskItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const [edit, setEdit] = useState(false);\n  const [title, setTitle] = useState(props.todo.title);\n  const onTaskRename = e => {\n    e.preventDefault();\n    setEdit(false);\n    props.renameTask(props.key, title);\n  };\n\n  // const renameTask = (id, title) => {\n  //   const foundedTask = props.todos.find(todo => todo.id === id)\n  //   const updatedTask = { ...foundedTask, title }\n  //   const index = props.todos.findIndex(todo => todo.id === id)\n  //   const newTodos = [...props.todos]\n  //   newTodos.splice(index, 1, updatedTask)\n  //   props.setTodos(newTodos)\n  // }\n\n  // const completeTask = (id) => {\n  //   const foundedTask = props.todos.find(todo => todo.id === id)\n  //   const updatedComplete = !foundedTask.completed\n  //   const updatedTask = { ...foundedTask, completed: updatedComplete }\n  //   const index = props.todos.findIndex(todo => todo.id === id)\n  //   const newTodos = [...props.todos]\n  //   newTodos.splice(index, 1, updatedTask)\n  //   props.setTodos(newTodos)\n  // }\n\n  // const changeTask = (id, title) => {\n  //   const foundedTask = props.todos.find(todo => todo.id === id)\n  //   let updatedTask\n  //   if (title === undefined) {\n  //     const updatedComplete = !foundedTask.completed\n  //     updatedTask = { ...foundedTask, completed: updatedComplete }\n  //   } else {\n  //     updatedTask = { ...foundedTask, title }\n  //   }\n  //   const index = props.todos.findIndex(todo => todo.id === id)\n  //   const newTodos = [...props.todos]\n  //   newTodos.splice(index, 1, updatedTask)\n  //   props.setTodos(newTodos)\n  // }\n\n  // const deleteTask = (id) => {\n  //   const newTodo = props.todos.filter(todo => todo.id !== id)\n  //   props.setTodos(newTodo);\n  // }\n\n  const editTitle = e => {\n    setTitle(e.target.value);\n  };\n  const edited = () => {\n    const newEdit = !edit;\n    setEdit(newEdit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.list,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: e => onTaskRename(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => props.completeTask(props.todo),\n            checked: props.todo.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), edit ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.rename,\n          value: title,\n          onChange: e => editTitle(e),\n          onBlur: () => edited(),\n          type: \"text\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.name,\n          onDoubleClick: () => edited(),\n          children: props.todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: () => props.deleteTask(props.key),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"bZ67lA9bYFZJe+IDbFYdkTsGZ+Q=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","styles","TaskItem","props","edit","setEdit","title","setTitle","todo","onTaskRename","e","preventDefault","renameTask","key","editTitle","target","value","edited","newEdit","list","form","box","completeTask","completed","rename","name","btn","deleteTask"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskItem/TaskItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./TaskItem.module.css\"\n\nconst TaskItem = (props) => {\n  const [edit, setEdit] = useState(false);\n  const [title, setTitle] = useState(props.todo.title);\n\n  const onTaskRename = (e) => {\n    e.preventDefault();\n    setEdit(false);\n    props.renameTask(props.key, title)\n  }\n\n  // const renameTask = (id, title) => {\n  //   const foundedTask = props.todos.find(todo => todo.id === id)\n  //   const updatedTask = { ...foundedTask, title }\n  //   const index = props.todos.findIndex(todo => todo.id === id)\n  //   const newTodos = [...props.todos]\n  //   newTodos.splice(index, 1, updatedTask)\n  //   props.setTodos(newTodos)\n  // }\n\n  // const completeTask = (id) => {\n  //   const foundedTask = props.todos.find(todo => todo.id === id)\n  //   const updatedComplete = !foundedTask.completed\n  //   const updatedTask = { ...foundedTask, completed: updatedComplete }\n  //   const index = props.todos.findIndex(todo => todo.id === id)\n  //   const newTodos = [...props.todos]\n  //   newTodos.splice(index, 1, updatedTask)\n  //   props.setTodos(newTodos)\n  // }\n\n  // const changeTask = (id, title) => {\n  //   const foundedTask = props.todos.find(todo => todo.id === id)\n  //   let updatedTask\n  //   if (title === undefined) {\n  //     const updatedComplete = !foundedTask.completed\n  //     updatedTask = { ...foundedTask, completed: updatedComplete }\n  //   } else {\n  //     updatedTask = { ...foundedTask, title }\n  //   }\n  //   const index = props.todos.findIndex(todo => todo.id === id)\n  //   const newTodos = [...props.todos]\n  //   newTodos.splice(index, 1, updatedTask)\n  //   props.setTodos(newTodos)\n  // }\n\n  // const deleteTask = (id) => {\n  //   const newTodo = props.todos.filter(todo => todo.id !== id)\n  //   props.setTodos(newTodo);\n  // }\n\n  const editTitle = (e) => { setTitle(e.target.value) }\n\n  const edited = () => {\n    const newEdit = !edit\n    setEdit(newEdit)\n  }\n\n  return (\n    <li\n      className={styles.list}>\n      <form\n        className={styles.form}\n        onSubmit={(e) => onTaskRename(e)} >\n        <div\n          className={styles.box}>\n          <label >\n            <input\n              type='checkbox'\n              onChange={() => props.completeTask(props.todo)}\n              checked={props.todo.completed}\n            />\n          </label>\n          {edit ? (\n            <input\n              className={styles.rename}\n              value={title}\n              onChange={(e) => editTitle(e)}\n              onBlur={() => edited()}\n              type=\"text\"\n              autoFocus>\n            </input>\n          ) : (\n            <div\n              className={styles.name}\n              onDoubleClick={() => edited()}>\n              {props.todo.title}\n            </div>\n          )}\n        </div>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={() => props.deleteTask(props.key)}>\n          &#10006;\n        </button>\n      </form>\n    </li>\n  )\n}\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAAA;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACG,KAAK,CAACK,IAAI,CAACF,KAAK,CAAC;EAEpD,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBN,OAAO,CAAC,KAAK,CAAC;IACdF,KAAK,CAACS,UAAU,CAACT,KAAK,CAACU,GAAG,EAAEP,KAAK,CAAC;EACpC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,MAAMQ,SAAS,GAAIJ,CAAC,IAAK;IAAEH,QAAQ,CAACG,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;EAAC,CAAC;EAErD,MAAMC,MAAM,GAAG,MAAM;IACnB,MAAMC,OAAO,GAAG,CAACd,IAAI;IACrBC,OAAO,CAACa,OAAO,CAAC;EAClB,CAAC;EAED,oBACE;IACE,SAAS,EAAEjB,MAAM,CAACkB,IAAK;IAAA,uBACvB;MACE,SAAS,EAAElB,MAAM,CAACmB,IAAK;MACvB,QAAQ,EAAGV,CAAC,IAAKD,YAAY,CAACC,CAAC,CAAE;MAAA,wBACjC;QACE,SAAS,EAAET,MAAM,CAACoB,GAAI;QAAA,wBACtB;UAAA,uBACE;YACE,IAAI,EAAC,UAAU;YACf,QAAQ,EAAE,MAAMlB,KAAK,CAACmB,YAAY,CAACnB,KAAK,CAACK,IAAI,CAAE;YAC/C,OAAO,EAAEL,KAAK,CAACK,IAAI,CAACe;UAAU;YAAA;YAAA;YAAA;UAAA;QAC9B;UAAA;UAAA;UAAA;QAAA,QACI,EACPnB,IAAI,gBACH;UACE,SAAS,EAAEH,MAAM,CAACuB,MAAO;UACzB,KAAK,EAAElB,KAAM;UACb,QAAQ,EAAGI,CAAC,IAAKI,SAAS,CAACJ,CAAC,CAAE;UAC9B,MAAM,EAAE,MAAMO,MAAM,EAAG;UACvB,IAAI,EAAC,MAAM;UACX,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACH,gBAER;UACE,SAAS,EAAEhB,MAAM,CAACwB,IAAK;UACvB,aAAa,EAAE,MAAMR,MAAM,EAAG;UAAA,UAC7Bd,KAAK,CAACK,IAAI,CAACF;QAAK;UAAA;UAAA;UAAA;QAAA,QAEpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QACE,SAAS,EAAEL,MAAM,CAACyB,GAAI;QACtB,IAAI,EAAC,QAAQ;QACb,OAAO,EAAE,MAAMvB,KAAK,CAACwB,UAAU,CAACxB,KAAK,CAACU,GAAG,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEpC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAET,CAAC;AAAA,GAjGKX,QAAQ;AAAA,KAARA,QAAQ;AAmGd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}