{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const {\n    todos,\n    setTodos,\n    todo\n  } = props;\n  const [text, setText] = useState('');\n  const [edit, setEdit] = useState(false);\n  const deleteTask = id => {\n    const newTodo = todos.filter(todo => todo.id !== id);\n    setTodos(newTodo);\n  };\n  const renameTask = e => {\n    e.preventDefault();\n    todo.title = text;\n    setEdit(false);\n  };\n  console.log(edit);\n\n  // render() {\n  //   const isLoggedIn = this.state.isLoggedIn;\n  //   let button;\n  //   if (edit) {\n  //     listItem = <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\"></input>;\n  //   } else {\n  //     listItem = <div>{todo.title}</div>;\n  //   }\n\n  //   return (\n  //     <div>\n  //       {listItem}\n  //     </div>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: edit ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => renameTask(e),\n      onDoubleClick: () => setEdit(true),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(todo.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => renameTask(e),\n      onDoubleClick: () => setEdit(true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(todo.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"VnegNuwxIMbyLX7iGXKeZW8IMdQ=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","TaskItem","props","todos","setTodos","todo","text","setText","edit","setEdit","deleteTask","id","newTodo","filter","renameTask","e","preventDefault","title","console","log","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nconst TaskItem = (props) => {\n  const { todos, setTodos, todo } = props;\n  const [text, setText] = useState('');\n  const [edit, setEdit] = useState(false);\n\n  const deleteTask = (id) => {\n    const newTodo = todos.filter(todo => todo.id !== id)\n    setTodos(newTodo);\n  }\n\n  const renameTask = (e) => {\n    e.preventDefault();\n    todo.title = text;\n    setEdit(false)\n  }\n  console.log(edit)\n\n\n  // render() {\n  //   const isLoggedIn = this.state.isLoggedIn;\n  //   let button;\n  //   if (edit) {\n  //     listItem = <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\"></input>;\n  //   } else {\n  //     listItem = <div>{todo.title}</div>;\n  //   }\n\n  //   return (\n  //     <div>\n  //       {listItem}\n  //     </div>\n  //   );\n  // }\n\n\n  return (\n    <li>\n      {edit ? (\n        <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n          <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\"></input>\n          <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n        </form>\n      ) : (\n        <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n          <div>{todo.title}</div>\n          <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n        </form>\n      )\n      }\n    </li >\n  )\n}\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGH,KAAK;EACvC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMU,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,OAAO,GAAGT,KAAK,CAACU,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKA,EAAE,CAAC;IACpDP,QAAQ,CAACQ,OAAO,CAAC;EACnB,CAAC;EAED,MAAME,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBX,IAAI,CAACY,KAAK,GAAGX,IAAI;IACjBG,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EACDS,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;;EAGjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACE;IAAA,UACGA,IAAI,gBACH;MAAM,QAAQ,EAAGO,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;MAAC,aAAa,EAAE,MAAMN,OAAO,CAAC,IAAI,CAAE;MAAA,wBACvE;QAAO,KAAK,EAAEH,IAAK;QAAC,QAAQ,EAAGS,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eAClF;QAAQ,OAAO,EAAE,MAAMX,UAAU,CAACL,IAAI,CAACM,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD,gBAEP;MAAM,QAAQ,EAAGI,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;MAAC,aAAa,EAAE,MAAMN,OAAO,CAAC,IAAI,CAAE;MAAA,wBACvE;QAAA,UAAMJ,IAAI,CAACY;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eACvB;QAAQ,OAAO,EAAE,MAAMP,UAAU,CAACL,IAAI,CAACM,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA;EAEhE;IAAA;IAAA;IAAA;EAAA,QAEG;AAEV,CAAC;AAAA,GAnDKV,QAAQ;AAAA,KAARA,QAAQ;AAqDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}