{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/App.jsx\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nimport TaskList from './components/TaskList';\nimport Buttons from './components/Buttons';\nimport Footer from './components/Footer';\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const localLoad = (key, value) => {\n  //   const item = localStorage.getItem(key)\n  //   if (item == null) {\n  //     return value\n  //   }\n  //   return JSON.parse(item)\n  // }\n\n  // const localTodos = localLoad('todos', [])\n  // const localFilter = localLoad('filter', 'all')\n\n  // const [todos, setTodos] = useState(localTodos);\n  // const [filter, setFilter] = useState(localFilter);\n\n  // useEffect(() => {\n  //   localStorage.setItem('todos', JSON.stringify(todos));\n  //   localStorage.setItem('filter', JSON.stringify(filter));\n  // }, [todos, filter]);\n\n  // const filteredTodos = useMemo(() => {\n  //   switch (filter) {\n  //     case 'all':\n  //       return todos\n  //     case 'active':\n  //       return (todos.filter(todo => !todo.completed))\n  //     case 'done':\n  //       return (todos.filter(todo => todo.completed))\n  //     default:\n  //       break;\n  //   }\n  // }, [filter, todos])\n\n  // const confirmTask = (text) => {\n  //   const todo = {\n  //     completed: false,\n  //     id: uuidv4(),\n  //     title: text,\n  //   }\n  //   setTodos([todo, ...todos]);\n  // }\n\n  // const isComplete = todos.every((todo) => todo.completed)\n\n  // const completeAll = () => {\n  //   const completeTodo = todos.map((item) => ({\n  //     ...item,\n  //     completed: !isComplete\n  //   }))\n  //   setTodos(completeTodo)\n  // }\n\n  // // \n  // const renameTask = (id, title) => {\n  //   if (!title.trim()) {\n  //     return\n  //   }\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id !== id) {\n  //       return todo\n  //     }\n  //     return { ...todo, title }\n  //   })\n  //   setTodos(newTodos)\n  // }\n\n  // const completeTask = (id) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id !== id) {\n  //       return todo\n  //     }\n  //     const updatedComplete = !todo.completed\n  //     return { ...todo, completed: updatedComplete }\n  //   })\n  //   setTodos(newTodos)\n  // }\n\n  // const deleteTask = (id) => {\n  //   const newTodo = todos.filter(todo => todo.id !== id)\n  //   setTodos(newTodo);\n  // }\n\n  // const deleteAll = () => {\n  //   const newTodo = todos.filter(todo => todo.completed === false)\n  //   setTodos(newTodo);\n  // }\n\n  // const editFilter = (value) => {\n  //   setFilter(value)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: styles.header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm\n\n      // confirmTask={confirmTask}\n      // completeAll={completeAll}\n      // isComplete={isComplete}\n      // length={todos.length}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: /*#__PURE__*/_jsxDEV(TaskList\n        // className={styles.taskList}\n        // filteredTodos={filteredTodos}\n        // deleteTask={deleteTask}\n        // renameTask={renameTask}\n        // completeTask={completeTask}\n        , {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        className: styles.buttons,\n        filter: filter,\n        length: todos.length,\n        deleteAll: deleteAll,\n        editFilter: editFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      length: filteredTodos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useMemo","v4","uuidv4","Header","TodoForm","TaskList","Buttons","Footer","styles","App","container","header","ul","buttons","filter","todos","length","deleteAll","editFilter","filteredTodos"],"sources":["/home/fusion/projects/learn/todo-react/src/App.jsx"],"sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nimport TaskList from './components/TaskList';\nimport Buttons from './components/Buttons';\nimport Footer from './components/Footer';\n\nimport styles from \"./App.module.css\";\n\nconst App = () => { \n\n  // const localLoad = (key, value) => {\n  //   const item = localStorage.getItem(key)\n  //   if (item == null) {\n  //     return value\n  //   }\n  //   return JSON.parse(item)\n  // }\n\n  // const localTodos = localLoad('todos', [])\n  // const localFilter = localLoad('filter', 'all')\n\n  // const [todos, setTodos] = useState(localTodos);\n  // const [filter, setFilter] = useState(localFilter);\n\n  // useEffect(() => {\n  //   localStorage.setItem('todos', JSON.stringify(todos));\n  //   localStorage.setItem('filter', JSON.stringify(filter));\n  // }, [todos, filter]);\n\n  // const filteredTodos = useMemo(() => {\n  //   switch (filter) {\n  //     case 'all':\n  //       return todos\n  //     case 'active':\n  //       return (todos.filter(todo => !todo.completed))\n  //     case 'done':\n  //       return (todos.filter(todo => todo.completed))\n  //     default:\n  //       break;\n  //   }\n  // }, [filter, todos])\n\n  // const confirmTask = (text) => {\n  //   const todo = {\n  //     completed: false,\n  //     id: uuidv4(),\n  //     title: text,\n  //   }\n  //   setTodos([todo, ...todos]);\n  // }\n\n\n\n  // const isComplete = todos.every((todo) => todo.completed)\n\n  // const completeAll = () => {\n  //   const completeTodo = todos.map((item) => ({\n  //     ...item,\n  //     completed: !isComplete\n  //   }))\n  //   setTodos(completeTodo)\n  // }\n\n  // // \n  // const renameTask = (id, title) => {\n  //   if (!title.trim()) {\n  //     return\n  //   }\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id !== id) {\n  //       return todo\n  //     }\n  //     return { ...todo, title }\n  //   })\n  //   setTodos(newTodos)\n  // }\n\n  // const completeTask = (id) => {\n  //   const newTodos = todos.map((todo) => {\n  //     if (todo.id !== id) {\n  //       return todo\n  //     }\n  //     const updatedComplete = !todo.completed\n  //     return { ...todo, completed: updatedComplete }\n  //   })\n  //   setTodos(newTodos)\n  // }\n\n\n  // const deleteTask = (id) => {\n  //   const newTodo = todos.filter(todo => todo.id !== id)\n  //   setTodos(newTodo);\n  // }\n\n  // const deleteAll = () => {\n  //   const newTodo = todos.filter(todo => todo.completed === false)\n  //   setTodos(newTodo);\n  // }\n\n  // const editFilter = (value) => {\n  //   setFilter(value)\n  // }\n\n  return (\n    <>\n      <div\n        className={styles.container}>\n        <Header\n          className={styles.header} />\n        <TodoForm\n\n          // confirmTask={confirmTask}\n          // completeAll={completeAll}\n          // isComplete={isComplete}\n          // length={todos.length}\n        />\n        <ul\n          className={styles.ul}>\n          <TaskList\n            // className={styles.taskList}\n            // filteredTodos={filteredTodos}\n            // deleteTask={deleteTask}\n            // renameTask={renameTask}\n            // completeTask={completeTask}\n          />\n        </ul>\n        <Buttons\n          className={styles.buttons}\n          filter={filter}\n          length={todos.length}\n          deleteAll={deleteAll}\n          editFilter={editFilter}\n        />\n      </div>\n      <Footer\n        length={filteredTodos.length}\n      />\n    </>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACpD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAOC,MAAM,MAAM,kBAAkB;AAAC;AAAA;AAEtC,MAAMC,GAAG,GAAG,MAAM;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MACE,SAAS,EAAED,MAAM,CAACE,SAAU;MAAA,wBAC5B,QAAC,MAAM;QACL,SAAS,EAAEF,MAAM,CAACG;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9B,QAAC;;MAEC;MACA;MACA;MACA;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACF;QACE,SAAS,EAAEH,MAAM,CAACI,EAAG;QAAA,uBACrB,QAAC;QACC;QACA;QACA;QACA;QACA;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QACC,eACL,QAAC,OAAO;QACN,SAAS,EAAEJ,MAAM,CAACK,OAAQ;QAC1B,MAAM,EAAEC,MAAO;QACf,MAAM,EAAEC,KAAK,CAACC,MAAO;QACrB,SAAS,EAAEC,SAAU;QACrB,UAAU,EAAEC;MAAW;QAAA;QAAA;QAAA;MAAA,QACvB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,MAAM;MACL,MAAM,EAAEC,aAAa,CAACH;IAAO;MAAA;MAAA;MAAA;IAAA,QAC7B;EAAA,gBACD;AAEP,CAAC;AAAA,KAnIKP,GAAG;AAqIT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}