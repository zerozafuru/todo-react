{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from \"./TodoForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const dispatch = use;\n  const [text, setText] = useState('');\n  const saveNewTodo = e => {\n    e.preventDefault();\n    if (!text.trim()) {\n      return;\n    }\n    props.confirmTask(text);\n    setText('');\n  };\n  const editText = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: saveNewTodo,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: props.length ? styles.complete_on : styles.complete_off,\n      type: \"checkbox\",\n      onChange: props.completeAll,\n      checked: props.isComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      autoFocus: true,\n      type: \"text\",\n      value: text,\n      onChange: editText,\n      placeholder: \"What needs to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","useSelector","useDispatch","styles","TodoForm","props","dispatch","use","text","setText","saveNewTodo","e","preventDefault","trim","confirmTask","editText","target","value","form","length","complete_on","complete_off","completeAll","isComplete","input"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport styles from \"./TodoForm.module.css\"\n\nconst TodoForm = (props) => {\n\n  const dispatch = use\n\n  const [text, setText] = useState('');\n\n  const saveNewTodo = (e) => {\n    e.preventDefault();\n    if (!text.trim()) {\n      return\n    }\n    props.confirmTask(text)\n    setText('');\n  }\n\n  const editText = (e) => { \n    setText(e.target.value) \n  }\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={saveNewTodo}>\n      <input\n        className={props.length ? styles.complete_on : styles.complete_off}\n        type='checkbox'\n        onChange={props.completeAll}\n        checked={props.isComplete} />\n      <input\n        className={styles.input}\n        autoFocus\n        type=\"text\"\n        value={text}\n        onChange={editText}\n        placeholder=\"What needs to be done?\" />\n    </form>\n  )\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,MAAM,MAAM,uBAAuB;AAAA;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAMC,QAAQ,GAAGC,GAAG;EAEpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,IAAI,CAACK,IAAI,EAAE,EAAE;MAChB;IACF;IACAR,KAAK,CAACS,WAAW,CAACN,IAAI,CAAC;IACvBC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMM,QAAQ,GAAIJ,CAAC,IAAK;IACtBF,OAAO,CAACE,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,oBACE;IACE,SAAS,EAAEd,MAAM,CAACe,IAAK;IACvB,QAAQ,EAAER,WAAY;IAAA,wBACtB;MACE,SAAS,EAAEL,KAAK,CAACc,MAAM,GAAGhB,MAAM,CAACiB,WAAW,GAAGjB,MAAM,CAACkB,YAAa;MACnE,IAAI,EAAC,UAAU;MACf,QAAQ,EAAEhB,KAAK,CAACiB,WAAY;MAC5B,OAAO,EAAEjB,KAAK,CAACkB;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B;MACE,SAAS,EAAEpB,MAAM,CAACqB,KAAM;MACxB,SAAS;MACT,IAAI,EAAC,MAAM;MACX,KAAK,EAAEhB,IAAK;MACZ,QAAQ,EAAEO,QAAS;MACnB,WAAW,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEX,CAAC;AAAA,GArCKX,QAAQ;AAAA,KAARA,QAAQ;AAuCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}