{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\nconst filter = useSelector(state => state.todos.filter);\nconst todos = state => state.todos.todos;\nconsole.log(filter, todos);\nexport const filteredTodos = createSelector([filter, todos], (filter, todos) => {\n  switch (filter) {\n    case 'all':\n      return todos;\n    case 'active':\n      return todos.filter(todo => !todo.completed);\n    case 'done':\n      return todos.filter(todo => todo.completed);\n    default:\n      break;\n  }\n});","map":{"version":3,"names":["createSelector","filter","useSelector","state","todos","console","log","filteredTodos","todo","completed"],"sources":["/home/fusion/projects/learn/todo-react/src/store/filters.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst filter = useSelector((state) => state.todos.filter)\nconst todos = (state) => state.todos.todos\n\nconsole.log(filter,todos)\n\nexport const filteredTodos = createSelector(\n  [filter, todos],\n  (filter, todos) => {\n    switch (filter) {\n      case 'all':\n        return todos\n      case 'active':\n        return (todos.filter(todo => !todo.completed))\n      case 'done':\n        return (todos.filter(todo => todo.completed))\n      default:\n        break;\n    }\n  }\n)"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,MAAMC,MAAM,GAAGC,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACH,MAAM,CAAC;AACzD,MAAMG,KAAK,GAAID,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACA,KAAK;AAE1CC,OAAO,CAACC,GAAG,CAACL,MAAM,EAACG,KAAK,CAAC;AAEzB,OAAO,MAAMG,aAAa,GAAGP,cAAc,CACzC,CAACC,MAAM,EAAEG,KAAK,CAAC,EACf,CAACH,MAAM,EAAEG,KAAK,KAAK;EACjB,QAAQH,MAAM;IACZ,KAAK,KAAK;MACR,OAAOG,KAAK;IACd,KAAK,QAAQ;MACX,OAAQA,KAAK,CAACH,MAAM,CAACO,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC;IAC/C,KAAK,MAAM;MACT,OAAQL,KAAK,CAACH,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;IAC9C;MACE;EAAM;AAEZ,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}