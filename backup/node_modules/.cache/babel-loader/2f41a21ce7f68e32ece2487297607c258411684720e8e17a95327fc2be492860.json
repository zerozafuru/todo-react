{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from \"./TodoForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const [text, setText] = useState('');\n  const createNewTodo = () => {\n    const todo = {\n      title: text,\n      completed: false,\n      id: uuidv4()\n    };\n    props.setTodos([todo, ...props.todos]);\n  };\n  const saveTask = e => {\n    e.preventDefault();\n    if (text.trim) {\n      createNewTodo();\n      setText('');\n    }\n  };\n  const isComplete = () => {\n    if (props.todos == []) {\n      props.todos.every(todo => todo.completed);\n    }\n  };\n  const completeAll = () => {\n    const completeTodo = props.todos.map(item => ({\n      ...item,\n      completed: !isComplete\n    }));\n    props.setTodos(completeTodo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: e => saveTask(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => completeAll(),\n      checked: isComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      autoFocus: true,\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"What needs to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","v4","uuidv4","styles","TodoForm","props","text","setText","createNewTodo","todo","title","completed","id","setTodos","todos","saveTask","e","preventDefault","trim","isComplete","every","completeAll","completeTodo","map","item","form","input","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from \"./TodoForm.module.css\"\n\nconst TodoForm = (props) => {\n\n  const [text, setText] = useState('');\n\n  const createNewTodo = () => {\n    const todo = {\n      title: text,\n      completed: false,\n      id: uuidv4(),\n    }\n    props.setTodos([todo, ...props.todos]);\n  }\n\n  const saveTask = (e) => {\n    e.preventDefault();\n    if (text.trim) {\n      createNewTodo()\n      setText('');\n    }\n  }\n\n  const isComplete = () => {\nif (props.todos == []) {\n    props.todos.every((todo) => todo.completed)\n}\n\n  } \n\n  const completeAll = () => {\n    const completeTodo = props.todos.map((item) => ({\n      ...item,\n      completed: !isComplete\n    }))\n    props.setTodos(completeTodo)\n  }\n\n  return (\n    <form\n      className={styles.form}\n\n      onSubmit={(e) => saveTask(e)}>\n      <input\n        type='checkbox'\n        onChange={() => completeAll()}\n        checked={isComplete} />\n      <input\n        className={styles.input}\n        autoFocus\n\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        \n        placeholder=\"What needs to be done?\" />\n    </form>\n  )\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,MAAM,MAAM,uBAAuB;AAAA;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,aAAa,GAAG,MAAM;IAC1B,MAAMC,IAAI,GAAG;MACXC,KAAK,EAAEJ,IAAI;MACXK,SAAS,EAAE,KAAK;MAChBC,EAAE,EAAEV,MAAM;IACZ,CAAC;IACDG,KAAK,CAACQ,QAAQ,CAAC,CAACJ,IAAI,EAAE,GAAGJ,KAAK,CAACS,KAAK,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIX,IAAI,CAACY,IAAI,EAAE;MACbV,aAAa,EAAE;MACfD,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,MAAMY,UAAU,GAAG,MAAM;IAC3B,IAAId,KAAK,CAACS,KAAK,IAAI,EAAE,EAAE;MACnBT,KAAK,CAACS,KAAK,CAACM,KAAK,CAAEX,IAAI,IAAKA,IAAI,CAACE,SAAS,CAAC;IAC/C;EAEE,CAAC;EAED,MAAMU,WAAW,GAAG,MAAM;IACxB,MAAMC,YAAY,GAAGjB,KAAK,CAACS,KAAK,CAACS,GAAG,CAAEC,IAAI,KAAM;MAC9C,GAAGA,IAAI;MACPb,SAAS,EAAE,CAACQ;IACd,CAAC,CAAC,CAAC;IACHd,KAAK,CAACQ,QAAQ,CAACS,YAAY,CAAC;EAC9B,CAAC;EAED,oBACE;IACE,SAAS,EAAEnB,MAAM,CAACsB,IAAK;IAEvB,QAAQ,EAAGT,CAAC,IAAKD,QAAQ,CAACC,CAAC,CAAE;IAAA,wBAC7B;MACE,IAAI,EAAC,UAAU;MACf,QAAQ,EAAE,MAAMK,WAAW,EAAG;MAC9B,OAAO,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACzB;MACE,SAAS,EAAEhB,MAAM,CAACuB,KAAM;MACxB,SAAS;MAET,IAAI,EAAC,MAAM;MACX,KAAK,EAAEpB,IAAK;MACZ,QAAQ,EAAGU,CAAC,IAAKT,OAAO,CAACS,CAAC,CAACW,MAAM,CAACC,KAAK,CAAE;MAEzC,WAAW,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEX,CAAC;AAAA,GAxDKxB,QAAQ;AAAA,KAARA,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}