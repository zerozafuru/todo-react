{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskList.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Tasks:\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: \"dfdfd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["TaskList"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskList.jsx"],"sourcesContent":["const TaskList = () => {\n  return (\n    <>\n      Tasks:\n      <>\n        <input type='button' value='all' />\n        <input type='button' value='done' />\n        <input type='button' value='Todo' />\n      </>\n      <ol>\n      dfdfd</ol>\n    </>\n  )\n}\n\nexport default TaskList;"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAG,MAAM;EACrB,oBACE;IAAA,kCAEE;MAAA,wBACE;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACpC;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,gBACnC,eACH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACU;EAAA,gBACT;AAEP,CAAC;AAAA,KAbKA,QAAQ;AAed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}