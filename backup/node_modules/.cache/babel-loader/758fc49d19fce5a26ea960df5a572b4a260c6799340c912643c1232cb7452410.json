{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"./TodoForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const [text, setText] = useState('');\n  const createNewTodo = text => {\n    const todo = {\n      title: text,\n      completed: false,\n      id: uuidv4()\n    };\n    setTodos([todo, ...props.todos]);\n  };\n  const saveTask = (e, text) => {\n    e.preventDefault();\n    if (text !== '' && text !== ' ') {\n      createNewTodo(text);\n      setText(\"\");\n    }\n  };\n  const completeAll = () => {\n    const toggleAllCheck = !todos.every(todo => todo.completed);\n    let completeTodo = todos.map(item => ({\n      ...item,\n      completed: toggleAllCheck\n    }));\n    setToggleAll(toggleAllCheck);\n    setTodos(completeTodo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: e => saveTask(e, props.text),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => props.completeAll(props.todos),\n      checked: props.toggleAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      autoFocus: true,\n      value: props.text,\n      onChange: e => props.setText(e.target.value),\n      type: \"text\",\n      placeholder: \"What needs to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","styles","TodoForm","props","text","setText","useState","createNewTodo","todo","title","completed","id","uuidv4","setTodos","todos","saveTask","e","preventDefault","completeAll","toggleAllCheck","every","completeTodo","map","item","setToggleAll","form","toggleAll","input","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./TodoForm.module.css\"\n\nconst TodoForm = (props) => {\n\n  const [text, setText] = useState('');\n\n  const createNewTodo = (text) => {\n    const todo = {\n      title: text,\n      completed: false,\n      id: uuidv4(),\n    }\n    setTodos([todo, ...props.todos]);\n  }\n\n  const saveTask = (e, text) => {\n    e.preventDefault();\n    if ((text !== '') && (text !== ' ')) {\n      createNewTodo(text)\n      setText(\"\");\n    }\n  }\n\n  const completeAll = () => {\n    const toggleAllCheck = !todos.every((todo) => todo.completed)\n    let completeTodo = todos.map((item) => ({\n      ...item,\n      completed: toggleAllCheck\n    }))\n    setToggleAll(toggleAllCheck)\n    setTodos(completeTodo)\n\n  }\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={(e) => saveTask(e, props.text)}>\n      <input\n        type='checkbox'\n        onChange={() => props.completeAll(props.todos)}\n        checked={props.toggleAll} />\n      <input className={styles.input}\n        autoFocus\n        value={props.text}\n        onChange={(e) => props.setText(e.target.value)}\n        type=\"text\"\n        placeholder=\"What needs to be done?\" />\n    </form>\n  )\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;AAAA;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMC,aAAa,GAAIH,IAAI,IAAK;IAC9B,MAAMI,IAAI,GAAG;MACXC,KAAK,EAAEL,IAAI;MACXM,SAAS,EAAE,KAAK;MAChBC,EAAE,EAAEC,MAAM;IACZ,CAAC;IACDC,QAAQ,CAAC,CAACL,IAAI,EAAE,GAAGL,KAAK,CAACW,KAAK,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,QAAQ,GAAG,CAACC,CAAC,EAAEZ,IAAI,KAAK;IAC5BY,CAAC,CAACC,cAAc,EAAE;IAClB,IAAKb,IAAI,KAAK,EAAE,IAAMA,IAAI,KAAK,GAAI,EAAE;MACnCG,aAAa,CAACH,IAAI,CAAC;MACnBC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,MAAMa,WAAW,GAAG,MAAM;IACxB,MAAMC,cAAc,GAAG,CAACL,KAAK,CAACM,KAAK,CAAEZ,IAAI,IAAKA,IAAI,CAACE,SAAS,CAAC;IAC7D,IAAIW,YAAY,GAAGP,KAAK,CAACQ,GAAG,CAAEC,IAAI,KAAM;MACtC,GAAGA,IAAI;MACPb,SAAS,EAAES;IACb,CAAC,CAAC,CAAC;IACHK,YAAY,CAACL,cAAc,CAAC;IAC5BN,QAAQ,CAACQ,YAAY,CAAC;EAExB,CAAC;EAED,oBACE;IACE,SAAS,EAAEpB,MAAM,CAACwB,IAAK;IACvB,QAAQ,EAAGT,CAAC,IAAKD,QAAQ,CAACC,CAAC,EAAEb,KAAK,CAACC,IAAI,CAAE;IAAA,wBACzC;MACE,IAAI,EAAC,UAAU;MACf,QAAQ,EAAE,MAAMD,KAAK,CAACe,WAAW,CAACf,KAAK,CAACW,KAAK,CAAE;MAC/C,OAAO,EAAEX,KAAK,CAACuB;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9B;MAAO,SAAS,EAAEzB,MAAM,CAAC0B,KAAM;MAC7B,SAAS;MACT,KAAK,EAAExB,KAAK,CAACC,IAAK;MAClB,QAAQ,EAAGY,CAAC,IAAKb,KAAK,CAACE,OAAO,CAACW,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;MAC/C,IAAI,EAAC,MAAM;MACX,WAAW,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEX,CAAC;AAAA,GAhDK3B,QAAQ;AAAA,KAARA,QAAQ;AAkDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}