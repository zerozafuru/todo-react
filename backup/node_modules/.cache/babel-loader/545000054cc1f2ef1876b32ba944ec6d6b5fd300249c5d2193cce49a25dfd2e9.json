{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const {\n    todos,\n    setTodos,\n    setFilter,\n    toggleAll,\n    setToggleAll\n  } = props;\n  const [text, setText] = useState('');\n  const saveTask = e => {\n    e.preventDefault();\n    if (!text) {\n      return;\n    }\n    ;\n    props.createNewTodo(text);\n    setText(\"\");\n  };\n  const useMemoArray = useMemo(() => todos.every(todo => todo.completed), [todoa]);\n  const completeAll = () => {\n    const toggleAllCheck = !todos.every(todo => todo.completed);\n    let completeTodo = todos.map(item => ({\n      ...item,\n      completed: toggleAllCheck\n    }));\n    setToggleAll(toggleAllCheck);\n    setTodos(completeTodo);\n    setFilter(completeTodo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create-form\",\n    onSubmit: e => saveTask(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => completeAll(),\n      checked: toggleAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"create-input\",\n      autoFocus: true,\n      value: text,\n      onChange: e => setText(e.target.value),\n      type: \"text\",\n      placeholder: \"What needs to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"tikI3I3K/Ly9RJt5UVlCqOJs+7w=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useMemo","TodoForm","props","todos","setTodos","setFilter","toggleAll","setToggleAll","text","setText","saveTask","e","preventDefault","createNewTodo","useMemoArray","every","todo","completed","todoa","completeAll","toggleAllCheck","completeTodo","map","item","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TodoForm.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nconst TodoForm = (props) => {\n  const { todos, setTodos, setFilter, toggleAll, setToggleAll } = props;\n  const [text, setText] = useState('');\n\n  const saveTask = (e) => {\n    e.preventDefault();\n    if (!text) { return };\n    props.createNewTodo(text)\n    setText(\"\");\n  }\n\n  const useMemoArray = useMemo(() => todos.every(todo => todo.completed), [todoa]);\n\n  const completeAll = () => {\n    const toggleAllCheck = !todos.every((todo) => todo.completed)\n\n    let completeTodo = todos.map((item) => ({\n      ...item,\n      completed: toggleAllCheck\n    }))\n    setToggleAll(toggleAllCheck)\n    setTodos(completeTodo)\n    setFilter(completeTodo)\n  }\n\n  return (\n    <form className=\"create-form\" onSubmit={(e) => saveTask(e)}>\n      <input type='checkbox' onChange={() => completeAll()} checked={toggleAll} />\n      <input className=\"create-input\" autoFocus value={text} onChange={(e) => setText(e.target.value)} type=\"text\" placeholder=\"What needs to be done?\" />\n      \n    </form>\n  )\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC;AAEjD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGL,KAAK;EACrE,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,QAAQ,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,IAAI,EAAE;MAAE;IAAO;IAAC;IACrBN,KAAK,CAACW,aAAa,CAACL,IAAI,CAAC;IACzBC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMK,YAAY,GAAGd,OAAO,CAAC,MAAMG,KAAK,CAACY,KAAK,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EAEhF,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,cAAc,GAAG,CAACjB,KAAK,CAACY,KAAK,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;IAE7D,IAAII,YAAY,GAAGlB,KAAK,CAACmB,GAAG,CAAEC,IAAI,KAAM;MACtC,GAAGA,IAAI;MACPN,SAAS,EAAEG;IACb,CAAC,CAAC,CAAC;IACHb,YAAY,CAACa,cAAc,CAAC;IAC5BhB,QAAQ,CAACiB,YAAY,CAAC;IACtBhB,SAAS,CAACgB,YAAY,CAAC;EACzB,CAAC;EAED,oBACE;IAAM,SAAS,EAAC,aAAa;IAAC,QAAQ,EAAGV,CAAC,IAAKD,QAAQ,CAACC,CAAC,CAAE;IAAA,wBACzD;MAAO,IAAI,EAAC,UAAU;MAAC,QAAQ,EAAE,MAAMQ,WAAW,EAAG;MAAC,OAAO,EAAEb;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5E;MAAO,SAAS,EAAC,cAAc;MAAC,SAAS;MAAC,KAAK,EAAEE,IAAK;MAAC,QAAQ,EAAGG,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACa,MAAM,CAACC,KAAK,CAAE;MAAC,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAE/I;AAEX,CAAC;AAAA,GAhCKxB,QAAQ;AAAA,KAARA,QAAQ;AAkCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}