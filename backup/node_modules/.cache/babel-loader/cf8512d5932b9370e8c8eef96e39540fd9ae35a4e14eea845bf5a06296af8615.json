{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskItem/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./TaskItem.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const [edit, setEdit] = useState(false);\n  const [title, setTitle] = useState(props.todo.title);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.list,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: e => props.renameTask(e, props.todo, setEdit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => props.completeTask(props.todo),\n            checked: props.todo.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), edit ? /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => props.setti(e.target.value),\n          onBlur: () => setEdit(false),\n          type: \"text\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onDoubleClick: () => setEdit(true),\n          children: props.todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: () => props.deleteTask(props.todo.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"bZ67lA9bYFZJe+IDbFYdkTsGZ+Q=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","styles","TaskItem","props","edit","setEdit","title","setTitle","todo","list","form","e","renameTask","box","completeTask","completed","setti","target","value","btn","deleteTask","id"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskItem/TaskItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./TaskItem.module.css\"\n\n\n\nconst TaskItem = (props) => {\n  const [edit, setEdit] = useState(false);\n  const [title, setTitle] = useState(props.todo.title)\n\n  return (\n    <li className={styles.list}>\n      <form\n        className={styles.form}\n        onSubmit={(e) => props.renameTask(e, props.todo, setEdit)} >\n        <div className={styles.box}>\n          <label >\n            <input\n              type='checkbox'\n              onChange={() => props.completeTask(props.todo)}\n              checked={props.todo.completed}\n            />\n          </label>\n          {edit ? (\n            <input\n              value={title}\n              onChange={(e) => props.setti(e.target.value)}\n              onBlur={() => setEdit(false)}\n              type=\"text\"\n              autoFocus>\n            </input>\n          ) : (\n            <div onDoubleClick={() => setEdit(true)}>\n              {props.todo.title}\n            </div>\n          )}\n        </div>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={() => props.deleteTask(props.todo.id)}>\n          &#10006;\n        </button>\n      </form>\n    </li>\n  )\n}\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAAA;AAI1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACG,KAAK,CAACK,IAAI,CAACF,KAAK,CAAC;EAEpD,oBACE;IAAI,SAAS,EAAEL,MAAM,CAACQ,IAAK;IAAA,uBACzB;MACE,SAAS,EAAER,MAAM,CAACS,IAAK;MACvB,QAAQ,EAAGC,CAAC,IAAKR,KAAK,CAACS,UAAU,CAACD,CAAC,EAAER,KAAK,CAACK,IAAI,EAAEH,OAAO,CAAE;MAAA,wBAC1D;QAAK,SAAS,EAAEJ,MAAM,CAACY,GAAI;QAAA,wBACzB;UAAA,uBACE;YACE,IAAI,EAAC,UAAU;YACf,QAAQ,EAAE,MAAMV,KAAK,CAACW,YAAY,CAACX,KAAK,CAACK,IAAI,CAAE;YAC/C,OAAO,EAAEL,KAAK,CAACK,IAAI,CAACO;UAAU;YAAA;YAAA;YAAA;UAAA;QAC9B;UAAA;UAAA;UAAA;QAAA,QACI,EACPX,IAAI,gBACH;UACE,KAAK,EAAEE,KAAM;UACb,QAAQ,EAAGK,CAAC,IAAKR,KAAK,CAACa,KAAK,CAACL,CAAC,CAACM,MAAM,CAACC,KAAK,CAAE;UAC7C,MAAM,EAAE,MAAMb,OAAO,CAAC,KAAK,CAAE;UAC7B,IAAI,EAAC,MAAM;UACX,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACH,gBAER;UAAK,aAAa,EAAE,MAAMA,OAAO,CAAC,IAAI,CAAE;UAAA,UACrCF,KAAK,CAACK,IAAI,CAACF;QAAK;UAAA;UAAA;UAAA;QAAA,QAEpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QACE,SAAS,EAAEL,MAAM,CAACkB,GAAI;QACtB,IAAI,EAAC,QAAQ;QACb,OAAO,EAAE,MAAMhB,KAAK,CAACiB,UAAU,CAACjB,KAAK,CAACK,IAAI,CAACa,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAExC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAET,CAAC;AAAA,GAxCKnB,QAAQ;AAAA,KAARA,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}