{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const {\n    todos,\n    setTodos,\n    todo\n  } = props;\n  const [text, setText] = useState('');\n  const [edit, setEdit] = useState(false);\n  const deleteTask = id => {\n    const newTodo = todos.filter(todo => todo.id != id);\n    setTodos(newTodo);\n  };\n  const [toggle, setToggle] = useState(false);\n  const renameTask = e => {\n    e.preventDefault();\n    if (text !== '') {\n      todo.title = text;\n      setEdit(false);\n    }\n  };\n  const completeTask = id => {\n    todo.completed = !todo.completed;\n    setToggle(todo.completed);\n    console.log(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"rename-form\",\n      onSubmit: e => renameTask(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: () => completeTask(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), edit ? /*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          onBlur: e => setEdit(false),\n          type: \"text\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onDoubleClick: e => setEdit(true),\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteTask(todo.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"osHA9us+WkUNKcLbkxvDbwyIhmU=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","TaskItem","props","todos","setTodos","todo","text","setText","edit","setEdit","deleteTask","id","newTodo","filter","toggle","setToggle","renameTask","e","preventDefault","title","completeTask","completed","console","log","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst TaskItem = (props) => {\n  const { todos, setTodos, todo } = props;\n  const [text, setText] = useState('');\n  const [edit, setEdit] = useState(false);\n\n  const deleteTask = (id) => {\n    const newTodo = todos.filter(todo => todo.id != id)\n    setTodos(newTodo);\n  }\n  const [toggle, setToggle] = useState(false)\n\n  const renameTask = (e) => {\n    e.preventDefault();\n    if (text !== '') {\n      todo.title = text;\n      setEdit(false)\n    }\n  }\n\n  const completeTask = (id) => {\n    todo.completed = !todo.completed\n    setToggle(todo.completed)\n    console.log(id)\n  }\n\n  return (\n    <li>\n      <form className=\"rename-form\" onSubmit={(e) => renameTask(e)} >\n        <label>\n          <input type='checkbox' onChange={() => completeTask(todo.id)} />\n          {edit ? (\n            <input value={text} onChange={(e) => setText(e.target.value)} onBlur={(e) => setEdit(false)} type=\"text\" autoFocus></input>\n          ) : (\n            <div onDoubleClick={(e) => setEdit(true)}>{todo.title}</div>\n          )}\n        </label>\n        <button type=\"button\" onClick={() => deleteTask(todo.id)}>&#10006;</button>\n      </form>\n    </li>\n  )\n}\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGH,KAAK;EACvC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMU,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,OAAO,GAAGT,KAAK,CAACU,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACM,EAAE,IAAIA,EAAE,CAAC;IACnDP,QAAQ,CAACQ,OAAO,CAAC;EACnB,CAAC;EACD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMgB,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIZ,IAAI,KAAK,EAAE,EAAE;MACfD,IAAI,CAACc,KAAK,GAAGb,IAAI;MACjBG,OAAO,CAAC,KAAK,CAAC;IAChB;EACF,CAAC;EAED,MAAMW,YAAY,GAAIT,EAAE,IAAK;IAC3BN,IAAI,CAACgB,SAAS,GAAG,CAAChB,IAAI,CAACgB,SAAS;IAChCN,SAAS,CAACV,IAAI,CAACgB,SAAS,CAAC;IACzBC,OAAO,CAACC,GAAG,CAACZ,EAAE,CAAC;EACjB,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,aAAa;MAAC,QAAQ,EAAGM,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;MAAA,wBAC3D;QAAA,wBACE;UAAO,IAAI,EAAC,UAAU;UAAC,QAAQ,EAAE,MAAMG,YAAY,CAACf,IAAI,CAACM,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,EAC/DH,IAAI,gBACH;UAAO,KAAK,EAAEF,IAAK;UAAC,QAAQ,EAAGW,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACO,MAAM,CAACC,KAAK,CAAE;UAAC,MAAM,EAAGR,CAAC,IAAKR,OAAO,CAAC,KAAK,CAAE;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAS,gBAE3H;UAAK,aAAa,EAAGQ,CAAC,IAAKR,OAAO,CAAC,IAAI,CAAE;UAAA,UAAEJ,IAAI,CAACc;QAAK;UAAA;UAAA;UAAA;QAAA,QACtD;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eACR;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAE,MAAMT,UAAU,CAACL,IAAI,CAACM,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA;EACtE;IAAA;IAAA;IAAA;EAAA,QACJ;AAET,CAAC;AAAA,GAxCKV,QAAQ;AAAA,KAARA,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}