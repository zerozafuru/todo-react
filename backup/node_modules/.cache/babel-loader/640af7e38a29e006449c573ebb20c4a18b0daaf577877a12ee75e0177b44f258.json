{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from \"./TodoForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const [text, setText] = useState('');\n  const createNewTodo = e => {\n    e.preventDefault();\n    if (text.trim) {\n      const todo = {\n        completed: false,\n        id: uuidv4(),\n        title: text\n      };\n      props.setTodos([todo, ...props.todos]);\n    }\n    setText('');\n  };\n  const isComplete = props.todos.every(todo => todo.completed);\n  const completeAll = () => {\n    const completeTodo = props.todos.map(item => ({\n      ...item,\n      completed: !isComplete\n    }));\n    props.setTodos(completeTodo);\n  };\n  const editText = () => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: e => createNewTodo(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: props.todos.length ? styles.completeOn : styles.completeOff,\n      type: \"checkbox\",\n      onChange: () => completeAll(),\n      checked: isComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      autoFocus: true,\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"What needs to be done?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","v4","uuidv4","styles","TodoForm","props","text","setText","createNewTodo","e","preventDefault","trim","todo","completed","id","title","setTodos","todos","isComplete","every","completeAll","completeTodo","map","item","editText","form","length","completeOn","completeOff","input","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from \"./TodoForm.module.css\"\n\nconst TodoForm = (props) => {\n\n  const [text, setText] = useState('');\n\n  const createNewTodo = (e) => {\n    e.preventDefault();\n    if (text.trim) {\n      const todo = {\n        completed: false,\n        id: uuidv4(),\n        title: text,\n      }\n      props.setTodos([todo, ...props.todos]);\n    }\n    setText('');\n  }\n\n  const isComplete = props.todos.every((todo) => todo.completed)\n\n  const completeAll = () => {\n    const completeTodo = props.todos.map((item) => ({\n      ...item,\n      completed: !isComplete\n    }))\n    props.setTodos(completeTodo)\n  }\n\n  const editText = () => {}\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={(e) => createNewTodo(e)}>\n      <input\n        className={props.todos.length ? styles.completeOn : styles.completeOff}\n        type='checkbox'\n        onChange={() => completeAll()}\n        checked={isComplete} />\n      <input\n        className={styles.input}\n        autoFocus\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        placeholder=\"What needs to be done?\" />\n    </form>\n  )\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,MAAM,MAAM,uBAAuB;AAAA;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIJ,IAAI,CAACK,IAAI,EAAE;MACb,MAAMC,IAAI,GAAG;QACXC,SAAS,EAAE,KAAK;QAChBC,EAAE,EAAEZ,MAAM,EAAE;QACZa,KAAK,EAAET;MACT,CAAC;MACDD,KAAK,CAACW,QAAQ,CAAC,CAACJ,IAAI,EAAE,GAAGP,KAAK,CAACY,KAAK,CAAC,CAAC;IACxC;IACAV,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMW,UAAU,GAAGb,KAAK,CAACY,KAAK,CAACE,KAAK,CAAEP,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;EAE9D,MAAMO,WAAW,GAAG,MAAM;IACxB,MAAMC,YAAY,GAAGhB,KAAK,CAACY,KAAK,CAACK,GAAG,CAAEC,IAAI,KAAM;MAC9C,GAAGA,IAAI;MACPV,SAAS,EAAE,CAACK;IACd,CAAC,CAAC,CAAC;IACHb,KAAK,CAACW,QAAQ,CAACK,YAAY,CAAC;EAC9B,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAM,CAAC,CAAC;EAEzB,oBACE;IACE,SAAS,EAAErB,MAAM,CAACsB,IAAK;IACvB,QAAQ,EAAGhB,CAAC,IAAKD,aAAa,CAACC,CAAC,CAAE;IAAA,wBAClC;MACE,SAAS,EAAEJ,KAAK,CAACY,KAAK,CAACS,MAAM,GAAGvB,MAAM,CAACwB,UAAU,GAAGxB,MAAM,CAACyB,WAAY;MACvE,IAAI,EAAC,UAAU;MACf,QAAQ,EAAE,MAAMR,WAAW,EAAG;MAC9B,OAAO,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACzB;MACE,SAAS,EAAEf,MAAM,CAAC0B,KAAM;MACxB,SAAS;MACT,IAAI,EAAC,MAAM;MACX,KAAK,EAAEvB,IAAK;MACZ,QAAQ,EAAGG,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAE;MACzC,WAAW,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEX,CAAC;AAAA,GA/CK3B,QAAQ;AAAA,KAARA,QAAQ;AAiDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}