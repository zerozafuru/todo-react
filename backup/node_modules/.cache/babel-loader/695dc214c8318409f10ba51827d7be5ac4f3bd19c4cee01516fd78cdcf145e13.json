{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTodo, toggleAllCompleted } from \"../../store/todosSlice\";\nimport { CompleteStyled, FormStyled, InputStyled } from \"./TodoForm.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoForm = props => {\n  _s();\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const saveNewTodo = e => {\n    e.preventDefault();\n    if (!text.trim()) {\n      return;\n    }\n    dispatch(createTodo(text));\n    setText('');\n  };\n  const todos = useSelector(state => state.todos.todos);\n  const isComplete = todos.every(todo => todo.completed);\n  const editText = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormStyled, {\n      onSubmit: saveNewTodo,\n      children: [/*#__PURE__*/_jsxDEV(CompleteStyled, {\n        className: todos.length ? 'done' : 'active',\n        type: \"checkbox\",\n        onChange: () => dispatch(toggleAllCompleted()),\n        checked: isComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputStyled, {\n        autoFocus: true,\n        type: \"text\",\n        value: text,\n        onChange: editText,\n        placeholder: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoForm, \"WkLz6DPe8XViM9hhAM6DzLpmyuA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","createTodo","toggleAllCompleted","CompleteStyled","FormStyled","InputStyled","TodoForm","props","dispatch","text","setText","saveNewTodo","e","preventDefault","trim","todos","state","isComplete","every","todo","completed","editText","target","value","length"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TodoForm/TodoForm.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTodo, toggleAllCompleted } from \"../../store/todosSlice\"\n\nimport { CompleteStyled, FormStyled, InputStyled } from \"./TodoForm.styles\";\n\nconst TodoForm = (props) => {\n  const dispatch = useDispatch()\n\n  const [text, setText] = useState('');\n\n  const saveNewTodo = (e) => {\n    e.preventDefault();\n    if (!text.trim()) {\n      return\n    }\n    dispatch(createTodo(text))\n    setText('');\n  }\n\n  const todos = useSelector((state) => state.todos.todos)\n  const isComplete = todos.every((todo) => todo.completed)\n\n  const editText = (e) => {\n    setText(e.target.value)\n  }\n\n  return (\n    <>\n      <h1>todos</h1>\n      <FormStyled\n        onSubmit={saveNewTodo}>\n        <CompleteStyled\n          className={todos.length ? 'done' : 'active'}\n          type='checkbox'\n          onChange={() => dispatch(toggleAllCompleted())}\n          checked={isComplete} />\n        <InputStyled\n          autoFocus\n          type=\"text\"\n          value={text}\n          onChange={editText}\n          placeholder=\"What needs to be done?\" />\n      </FormStyled>\n    </>\n  )\n}\n\nexport default TodoForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,kBAAkB,QAAQ,wBAAwB;AAEvE,SAASC,cAAc,EAAEC,UAAU,EAAEC,WAAW,QAAQ,mBAAmB;AAAC;AAAA;AAE5E,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,IAAI,CAACK,IAAI,EAAE,EAAE;MAChB;IACF;IACAN,QAAQ,CAACP,UAAU,CAACQ,IAAI,CAAC,CAAC;IAC1BC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMK,KAAK,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACvD,MAAME,UAAU,GAAGF,KAAK,CAACG,KAAK,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;EAExD,MAAMC,QAAQ,GAAIT,CAAC,IAAK;IACtBF,OAAO,CAACE,CAAC,CAACU,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd,QAAC,UAAU;MACT,QAAQ,EAAEZ,WAAY;MAAA,wBACtB,QAAC,cAAc;QACb,SAAS,EAAEI,KAAK,CAACS,MAAM,GAAG,MAAM,GAAG,QAAS;QAC5C,IAAI,EAAC,UAAU;QACf,QAAQ,EAAE,MAAMhB,QAAQ,CAACN,kBAAkB,EAAE,CAAE;QAC/C,OAAO,EAAEe;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACzB,QAAC,WAAW;QACV,SAAS;QACT,IAAI,EAAC,MAAM;QACX,KAAK,EAAER,IAAK;QACZ,QAAQ,EAAEY,QAAS;QACnB,WAAW,EAAC;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA,gBACZ;AAEP,CAAC;AAAA,GAxCKf,QAAQ;EAAA,QACKP,WAAW,EAadC,WAAW;AAAA;AAAA,KAdrBM,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}