{"ast":null,"code":"var _jsxFileName = \"/home/fusion/projects/learn/todo-react/src/components/TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  _s();\n  const {\n    todos,\n    setTodos,\n    todo\n  } = props;\n  const [text, setText] = useState('');\n  const [edit, setEdit] = useState(false);\n  const deleteTask = id => {\n    const newTodo = todos.filter(todo => todo.id !== id);\n    setTodos(newTodo);\n  };\n  const renameTask = e => {\n    e.preventDefault();\n    todo.title = text;\n    setEdit(false);\n  };\n  console.log(edit);\n  let listItem;\n  if (edit) {\n    listItem = /*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }, this);\n  } else {\n    listItem = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => renameTask(e),\n    onDoubleClick: () => setEdit(true),\n    children: [listItem, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTask(todo.id),\n      children: \"\\u2716\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n// return (\n//   <li>\n//     {edit ? (\n//       <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n//         <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\"></input>\n//         <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n//       </form>\n//     ) : (\n//       <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n//         <div>{todo.title}</div>\n//         <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n//       </form>\n//     )\n//     }\n//   </li >\n// )\n_s(TaskItem, \"VnegNuwxIMbyLX7iGXKeZW8IMdQ=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","TaskItem","props","todos","setTodos","todo","text","setText","edit","setEdit","deleteTask","id","newTodo","filter","renameTask","e","preventDefault","title","console","log","listItem","target","value"],"sources":["/home/fusion/projects/learn/todo-react/src/components/TaskItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nconst TaskItem = (props) => {\n  const { todos, setTodos, todo } = props;\n  const [text, setText] = useState('');\n  const [edit, setEdit] = useState(false);\n\n  const deleteTask = (id) => {\n    const newTodo = todos.filter(todo => todo.id !== id)\n    setTodos(newTodo);\n  }\n\n  const renameTask = (e) => {\n    e.preventDefault();\n    todo.title = text;\n    setEdit(false)\n  }\n  console.log(edit)\n\n\n  \n    \n    let listItem;\n    if (edit) {\n      listItem = <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\"></input>;\n    } else {\n      listItem = <div>{todo.title}</div>;\n    }\n\n    return (\n      <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n        {listItem}\n      <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n        </form>\n    );\n  }\n\n\n  // return (\n  //   <li>\n  //     {edit ? (\n  //       <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n  //         <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\"></input>\n  //         <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n  //       </form>\n  //     ) : (\n  //       <form onSubmit={(e) => renameTask(e)} onDoubleClick={() => setEdit(true)}>\n  //         <div>{todo.title}</div>\n  //         <button onClick={() => deleteTask(todo.id)}>&#10006;</button>\n  //       </form>\n  //     )\n  //     }\n  //   </li >\n  // )\n\n\nexport default TaskItem;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGH,KAAK;EACvC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMU,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,OAAO,GAAGT,KAAK,CAACU,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKA,EAAE,CAAC;IACpDP,QAAQ,CAACQ,OAAO,CAAC;EACnB,CAAC;EAED,MAAME,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBX,IAAI,CAACY,KAAK,GAAGX,IAAI;IACjBG,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EACDS,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EAKf,IAAIY,QAAQ;EACZ,IAAIZ,IAAI,EAAE;IACRY,QAAQ,gBAAG;MAAO,KAAK,EAAEd,IAAK;MAAC,QAAQ,EAAGS,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACM,MAAM,CAACC,KAAK,CAAE;MAAC,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAC/F,CAAC,MAAM;IACLF,QAAQ,gBAAG;MAAA,UAAMf,IAAI,CAACY;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EACpC;EAEA,oBACE;IAAM,QAAQ,EAAGF,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;IAAC,aAAa,EAAE,MAAMN,OAAO,CAAC,IAAI,CAAE;IAAA,WACtEW,QAAQ,eACX;MAAQ,OAAO,EAAE,MAAMV,UAAU,CAACL,IAAI,CAACM,EAAE,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACpD;AAEb,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GAnDIV,QAAQ;AAAA,KAARA,QAAQ;AAsDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}